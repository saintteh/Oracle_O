---GL_TRANS_ACT (OPEN)-----------
WITH GLO AS (
SELECT 'GLO' AS T, JEL.AOC_NAME, JEL.LEGAL_ENTITY_ID, JEL.LEDGER_ID, JEL.CHART_OF_ACCOUNTS_ID, JEL.JE_BATCH_NAME, JEL.JE_BATCH_ID, JEL.DEFAULT_PERIOD_NAME,
JEL.JE_HEADER_ID, JEL.JOURNAL_NAME, JEL.JE_SOURCE,JEL.PERIOD_NAME,JEL.DEFAULT_EFFECTIVE_DATE,
JEL.SEGMENT3 AS ACCOUNT_ID,
JEL.SEGMENT3_DESC AS ACCOUNT_NAME,
JEL.ACCT_YEAR, JEL.ACCT_PERIOD,
JEL.STATUS, JEL.DATE_CREATED, JEL.POSTED_DATE, JEL.DESCRIPTION, JEL.DESCRIPTION_JL, JEL.CURRENCY_CODE, JEL.CURR_AMT,
JEL.ENTERED_DR,JEL.ENTERED_CR,JEL.ACCOUNTED_DR,JEL.ACCOUNTED_CR,JEL.ACCT_AMT, JEL.GL_SEGMENT,
JEL.SEGMENT1,JEL.SEGMENT2,JEL.SEGMENT3,JEL.SEGMENT4,JEL.SEGMENT5,JEL.SEGMENT6,JEL.SEGMENT7,
JEL.SEGMENT1_DESC, JEL.SEGMENT2_DESC, JEL.SEGMENT3_DESC, JEL.SEGMENT4_DESC, JEL.SEGMENT5_DESC, JEL.SEGMENT6_DESC, JEL.SEGMENT7_DESC
FROM (
SELECT GLL.NAME AS AOC_NAME, GLJH.LEGAL_ENTITY_ID,
GLCC.CHART_OF_ACCOUNTS_ID,
GLJB.NAME AS JE_BATCH_NAME, GLJB.JE_BATCH_ID, GLJB.DEFAULT_PERIOD_NAME,
TO_CHAR(CAST(GLJH.DEFAULT_EFFECTIVE_DATE AS DATE), 'YYYY') AS ACCT_YEAR,
TO_CHAR(CAST(GLJH.DEFAULT_EFFECTIVE_DATE AS DATE), 'YYYYMM') AS ACCT_PERIOD,
GLJH.JE_HEADER_ID, GLJH.NAME AS JOURNAL_NAME,
GLJH.LEDGER_ID, GLJH.JE_SOURCE,GLJH.PERIOD_NAME, GLJH.DEFAULT_EFFECTIVE_DATE,
GLJH.STATUS, GLJH.DATE_CREATED, GLJH.POSTED_DATE, GLJH.DESCRIPTION, GLJL.DESCRIPTION AS DESCRIPTION_JL,
GLJL.CURRENCY_CODE,
GLJL.ENTERED_DR, GLJL.ENTERED_CR,
NVL(GLJL.ENTERED_DR,0)+NVL(GLJL.ENTERED_CR,0) AS CURR_AMT,
GLJL.ACCOUNTED_DR,GLJL.ACCOUNTED_CR,
NVL(GLJL.ACCOUNTED_DR,0)+NVL(GLJL.ACCOUNTED_CR,0) AS ACCT_AMT,
GLCC.SEGMENT1 ||'-'|| GLCC.SEGMENT2 ||'-'|| GLCC.SEGMENT3 ||'-'|| GLCC.SEGMENT4 ||'-'|| GLCC.SEGMENT5 ||'-'|| GLCC.SEGMENT6 ||'-'|| GLCC.SEGMENT7 AS GL_SEGMENT,
GLCC.SEGMENT1,GLCC.SEGMENT2,GLCC.SEGMENT3,GLCC.SEGMENT4,GLCC.SEGMENT5,GLCC.SEGMENT6,GLCC.SEGMENT7,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,1,GLCC.SEGMENT1),1,40) SEGMENT1_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,2,GLCC.SEGMENT2),1,40) SEGMENT2_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,3,GLCC.SEGMENT3),1,40) SEGMENT3_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,4,GLCC.SEGMENT4),1,40) SEGMENT4_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,5,GLCC.SEGMENT5),1,40) SEGMENT5_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,6,GLCC.SEGMENT6),1,40) SEGMENT6_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,7,GLCC.SEGMENT7),1,40) SEGMENT7_DESC
FROM GL_LEDGERS GLL INNER JOIN GL_JE_HEADERS GLJH ON GLL.LEDGER_ID=GLJH.LEDGER_ID
--LEFT JOIN XLE_ENTITY_PROFILES E ON GLJH.LEGAL_ENTITY_ID = E.LEGAL_ENTITY_ID
--INNER JOIN GL_PERIOD_STATUSES GLPS ON GLL.LEDGER_ID=GLJH.LEDGER_ID AND GLJH.PERIOD_NAME=GLPS.PERIOD_NAME
INNER JOIN GL_JE_BATCHES GLJB ON GLJH.JE_BATCH_ID=GLJB.JE_BATCH_ID
INNER JOIN GL_JE_LINES GLJL ON GLJH.JE_HEADER_ID=GLJL.JE_HEADER_ID
INNER JOIN GL_CODE_COMBINATIONS GLCC ON GLJL.CODE_COMBINATION_ID=GLCC.CODE_COMBINATION_ID
)JEL
WHERE JEL.AOC_NAME IN (:AOC_NAME)
AND JEL.SEGMENT3 IN (:EXPENSE_ACCT) --='21511'
--AND (:PERIOD_S5 IS NULL OR JEL.SEGMENT5 IN (:PERIOD_S5))
--AND JEL.ACCT_YEAR = SUBSTR(:PERIOD_S5,1,4)
--AND JEL.ACCT_PERIOD < :PERIOD_S5
AND SUBSTR(JEL.SEGMENT5,1,4) = SUBSTR(:PERIOD_S5,1,4)
--AND JEL.SEGMENT5 < :PERIOD_S5
)
---GL_TRANS_ACT (CURRENT)-----------
,GLC AS (
SELECT 'GLC' AS T, JEL.AOC_NAME, JEL.LEGAL_ENTITY_ID, JEL.LEDGER_ID, JEL.CHART_OF_ACCOUNTS_ID, JEL.JE_BATCH_NAME, JEL.JE_BATCH_ID, JEL.DEFAULT_PERIOD_NAME,
JEL.JE_HEADER_ID, JEL.JOURNAL_NAME, JEL.JE_SOURCE,JEL.PERIOD_NAME,JEL.DEFAULT_EFFECTIVE_DATE,
JEL.SEGMENT3 AS ACCOUNT_ID,
JEL.SEGMENT3_DESC AS ACCOUNT_NAME,
JEL.ACCT_YEAR, JEL.ACCT_PERIOD,
JEL.STATUS, JEL.DATE_CREATED, JEL.POSTED_DATE, JEL.DESCRIPTION, JEL.DESCRIPTION_JL, JEL.CURRENCY_CODE, JEL.CURR_AMT,
JEL.ENTERED_DR,JEL.ENTERED_CR,JEL.ACCOUNTED_DR,JEL.ACCOUNTED_CR,JEL.ACCT_AMT, JEL.GL_SEGMENT,
JEL.SEGMENT1,JEL.SEGMENT2,JEL.SEGMENT3,JEL.SEGMENT4,JEL.SEGMENT5,JEL.SEGMENT6,JEL.SEGMENT7,
JEL.SEGMENT1_DESC, JEL.SEGMENT2_DESC, JEL.SEGMENT3_DESC, JEL.SEGMENT4_DESC, JEL.SEGMENT5_DESC, JEL.SEGMENT6_DESC, JEL.SEGMENT7_DESC
FROM (
SELECT GLL.NAME AS AOC_NAME, GLJH.LEGAL_ENTITY_ID,
GLCC.CHART_OF_ACCOUNTS_ID,
GLJB.NAME AS JE_BATCH_NAME, GLJB.JE_BATCH_ID, GLJB.DEFAULT_PERIOD_NAME,
TO_CHAR(CAST(GLJH.DEFAULT_EFFECTIVE_DATE AS DATE), 'YYYY') AS ACCT_YEAR,
TO_CHAR(CAST(GLJH.DEFAULT_EFFECTIVE_DATE AS DATE), 'YYYYMM') AS ACCT_PERIOD,
GLJH.JE_HEADER_ID, GLJH.NAME AS JOURNAL_NAME,
GLJH.LEDGER_ID, GLJH.JE_SOURCE,GLJH.PERIOD_NAME, GLJH.DEFAULT_EFFECTIVE_DATE,
GLJH.STATUS, GLJH.DATE_CREATED, GLJH.POSTED_DATE, GLJH.DESCRIPTION, GLJL.DESCRIPTION AS DESCRIPTION_JL,
GLJL.CURRENCY_CODE,
GLJL.ENTERED_DR, GLJL.ENTERED_CR,
NVL(GLJL.ENTERED_DR,0)+NVL(GLJL.ENTERED_CR,0) AS CURR_AMT,
GLJL.ACCOUNTED_DR,GLJL.ACCOUNTED_CR,
NVL(GLJL.ACCOUNTED_DR,0)+NVL(GLJL.ACCOUNTED_CR,0) AS ACCT_AMT,
GLCC.SEGMENT1 ||'-'|| GLCC.SEGMENT2 ||'-'|| GLCC.SEGMENT3 ||'-'|| GLCC.SEGMENT4 ||'-'|| GLCC.SEGMENT5 ||'-'|| GLCC.SEGMENT6 ||'-'|| GLCC.SEGMENT7 AS GL_SEGMENT,
GLCC.SEGMENT1,GLCC.SEGMENT2,GLCC.SEGMENT3,GLCC.SEGMENT4,GLCC.SEGMENT5,GLCC.SEGMENT6,GLCC.SEGMENT7,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,1,GLCC.SEGMENT1),1,40) SEGMENT1_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,2,GLCC.SEGMENT2),1,40) SEGMENT2_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,3,GLCC.SEGMENT3),1,40) SEGMENT3_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,4,GLCC.SEGMENT4),1,40) SEGMENT4_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,5,GLCC.SEGMENT5),1,40) SEGMENT5_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,6,GLCC.SEGMENT6),1,40) SEGMENT6_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GLCC.CHART_OF_ACCOUNTS_ID,7,GLCC.SEGMENT7),1,40) SEGMENT7_DESC
FROM GL_LEDGERS GLL INNER JOIN GL_JE_HEADERS GLJH ON GLL.LEDGER_ID=GLJH.LEDGER_ID
--LEFT JOIN XLE_ENTITY_PROFILES E ON GLJH.LEGAL_ENTITY_ID = E.LEGAL_ENTITY_ID
--INNER JOIN GL_PERIOD_STATUSES GLPS ON GLL.LEDGER_ID=GLJH.LEDGER_ID AND GLJH.PERIOD_NAME=GLPS.PERIOD_NAME
INNER JOIN GL_JE_BATCHES GLJB ON GLJH.JE_BATCH_ID=GLJB.JE_BATCH_ID
INNER JOIN GL_JE_LINES GLJL ON GLJH.JE_HEADER_ID=GLJL.JE_HEADER_ID
INNER JOIN GL_CODE_COMBINATIONS GLCC ON GLJL.CODE_COMBINATION_ID=GLCC.CODE_COMBINATION_ID
)JEL
WHERE JEL.AOC_NAME IN (:AOC_NAME)
AND JEL.SEGMENT3 IN (:EXPENSE_ACCT) --='21511'
--AND JEL.ACCT_YEAR = SUBSTR(:PERIOD_S5,1,4)
--AND JEL.ACCT_PERIOD = :PERIOD_S5
AND SUBSTR(JEL.SEGMENT5,1,4) = SUBSTR(:PERIOD_S5,1,4)
AND JEL.SEGMENT5 = :PERIOD_S5
)
---AP_IL---------------------------------------
,APIL AS (
SELECT 'AP_IL' AS T, DS2.* FROM
(SELECT --'AP_INVOICE_LINES_ALL_01' AS T,
IH.INVOICE_NUM, IH.APPROVAL_STATUS,
IH.INVOICE_CURRENCY_CODE, IH.PAYMENT_CURRENCY_CODE,
IL.ORG_ID, E.LEGAL_ENTITY_IDENTIFIER AS AOC,
E.NAME AS AOC_NAME,
regexp_replace(regexp_replace(E.NAME, '[(][A-Z]+[)]', ''), '[^a-zA-Z ]', '') AS AOC_NAME1,
TO_CHAR(IH.CREATION_DATE, 'YYYYMM') AS CREATION_PERIOD,
TO_CHAR(IH.GL_DATE, 'YYYY') AS ACCT_YEAR_AP,
TO_CHAR(IH.GL_DATE, 'YYYYMM') AS ACCT_PERIOD_AP,
IL.INVOICE_ID, IL.LINE_NUMBER, IL.LINE_TYPE_LOOKUP_CODE,
IL.DESCRIPTION, IL.LINE_SOURCE, IL.OVERLAY_DIST_CODE_CONCAT, GCC.SEGMENT1,GCC.SEGMENT2,GCC.SEGMENT3,GCC.SEGMENT4,GCC.SEGMENT5,GCC.SEGMENT6,GCC.SEGMENT7,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GCC.CHART_OF_ACCOUNTS_ID,3,GCC.SEGMENT5),1,40) SEGMENT3_DESC,
SUBSTR(GL_FLEXFIELDS_PKG.GET_DESCRIPTION_SQL( GCC.CHART_OF_ACCOUNTS_ID,5,GCC.SEGMENT5),1,40) SEGMENT5_DESC,
GCC.SEGMENT1 ||'-'|| GCC.SEGMENT2 ||'-'|| GCC.SEGMENT3 ||'-'|| GCC.SEGMENT4 ||'-'|| GCC.SEGMENT5 ||'-'|| GCC.SEGMENT6 ||'-'|| GCC.SEGMENT7 AS GL_SEGMENT,
IL.SET_OF_BOOKS_ID, IL.AMOUNT, IL.ASSESSABLE_VALUE, IL.TOTAL_REC_TAX_AMOUNT, IL.TAX_RATE_ID,IL.TAX_RATE_CODE,IL.TAX_RATE,
CASE WHEN IL.LINE_TYPE_LOOKUP_CODE IN ('ITEM') THEN IL.AMOUNT ELSE 0 END AS BASE_AMT,
CASE WHEN IL.LINE_TYPE_LOOKUP_CODE IN ('TAX') THEN IL.AMOUNT ELSE 0 END AS TAX_AMT,
CASE WHEN IL.LINE_TYPE_LOOKUP_CODE IN ('AWT') THEN IL.AMOUNT ELSE 0 END AS WHT_AMT
FROM AP_INVOICES_ALL IH INNER JOIN XLE_ENTITY_PROFILES E
ON IH.LEGAL_ENTITY_ID=E.LEGAL_ENTITY_ID
INNER JOIN AP_INVOICE_LINES_ALL IL ON IH.INVOICE_ID=IL.INVOICE_ID
LEFT JOIN GL_CODE_COMBINATIONS GCC ON IL.DEFAULT_DIST_CCID=GCC.CODE_COMBINATION_ID
)DS2
WHERE DS2.AOC_NAME1 IN (:AOC_NAME)
AND DS2.SEGMENT3 IN (:ACCT_ID_AP)
--AND (:PERIOD_S5 IS NULL OR DS2.SEGMENT5 IN (:PERIOD_S5))
--AND DS2.ACCT_YEAR_AP = SUBSTR(:PERIOD_S5,1,4)
--AND DS2.ACCT_PERIOD_AP = :PERIOD_S5
AND SUBSTR(DS2.SEGMENT5,1,4) = SUBSTR(:PERIOD_S5,1,4)
AND DS2.SEGMENT5 = :PERIOD_S5
AND DS2.APPROVAL_STATUS='APPROVED'
)
---RPT DET-------------------------------
SELECT 'GL_VS_AP_DET1' AS GL,
GO.AOC_NAME, GO.ACCT_YEAR, GO.ACCOUNT_ID AS EXPENSE_ACCT，GO.ACCOUNT_NAME AS EXPENSE_ACCT_DESC，I.SEGMENT3 AS AP_ACCT, I.SEGMENT3_DESC AS AP_ACCT_DESC,
GO.SEGMENT4 AS LOC, GO.CURRENCY_CODE AS CURR_CODE,
GO.CURR_AMT AS OPEN_AMT,
GC.CURR_AMT AS CURR_AMT,
I.INV_AMT AS INV_AMT,
GO.CURR_AMT+GC.CURR_AMT+I.INV_AMT AS CLOSING_AMT
FROM
(
SELECT GLO.AOC_NAME, GLO.ACCT_YEAR, GLO.ACCOUNT_ID, GLO.ACCOUNT_NAME, GLO.STATUS, GLO.SEGMENT4, GLO.SEGMENT5, GLO.CURRENCY_CODE,
COUNT(GLO.JOURNAL_NAME) AS J_COUNT,
SUM(GLO.CURR_AMT) AS CURR_AMT,
SUM(GLO.ACCT_AMT) AS ACCT_AMT
FROM GLO GLO
GROUP BY GLO.AOC_NAME, GLO.ACCT_YEAR, GLO.ACCOUNT_ID, GLO.ACCOUNT_NAME, GLO.STATUS, GLO.SEGMENT4, GLO.SEGMENT5, GLO.CURRENCY_CODE
)GO
LEFT JOIN
(
SELECT GLC.AOC_NAME, GLC.ACCT_YEAR,  GLC.ACCOUNT_ID, GLC.ACCOUNT_NAME, GLC.STATUS, GLC.SEGMENT4, GLC.SEGMENT5, GLC.CURRENCY_CODE,
COUNT(GLC.JOURNAL_NAME) AS J_COUNT,
SUM(GLC.CURR_AMT) AS CURR_AMT,
SUM(GLC.ACCT_AMT) AS ACCT_AMT
FROM GLC GLC
GROUP BY GLC.AOC_NAME, GLC.ACCT_YEAR, GLC.ACCOUNT_ID, GLC.ACCOUNT_NAME, GLC.STATUS, GLC.SEGMENT4, GLC.SEGMENT5, GLC.CURRENCY_CODE
)GC
ON GO.AOC_NAME=GC.AOC_NAME
AND GO.ACCT_YEAR=GC.ACCT_YEAR
AND GO.SEGMENT5=GC.SEGMENT5
AND GO.SEGMENT4=GC.SEGMENT4
AND GO.CURRENCY_CODE=GC.CURRENCY_CODE
LEFT JOIN
(
SELECT APIL.AOC_NAME1,
APIL.SEGMENT1,APIL.SEGMENT2,APIL.SEGMENT3,APIL.SEGMENT4,APIL.SEGMENT5,APIL.SEGMENT6,APIL.SEGMENT7,APIL.SEGMENT3_DESC, APIL.SEGMENT5_DESC, APIL.ACCT_YEAR_AP, APIL.INVOICE_CURRENCY_CODE,
COUNT(APIL.INVOICE_ID) AS INV_COUNT,
SUM(AMOUNT) AS INV_AMT
FROM APIL APIL
GROUP BY APIL.AOC_NAME1, APIL.SEGMENT1,APIL.SEGMENT2,APIL.SEGMENT3,APIL.SEGMENT4,APIL.SEGMENT5,APIL.SEGMENT6,APIL.SEGMENT7,APIL.SEGMENT3_DESC, APIL.SEGMENT5_DESC, APIL.ACCT_YEAR_AP, APIL.INVOICE_CURRENCY_CODE
)I
ON GO.AOC_NAME=I.AOC_NAME1
AND GO.ACCT_YEAR=I.ACCT_YEAR_AP
--AND GO.ACCOUNT_ID=I.SEGMENT3
AND GO.SEGMENT5=I.SEGMENT5
AND GO.SEGMENT4=I.SEGMENT4
AND GO.CURRENCY_CODE=I.INVOICE_CURRENCY_CODE

---RPT SUM-------------------------------
SELECT 'GL_VS_AP_DET1' AS GL,
GO.AOC_NAME, GO.ACCT_YEAR, GO.ACCOUNT_ID AS EXPENSE_ACCT，GO.ACCOUNT_NAME AS EXPENSE_ACCT_DESC，
GO.SEGMENT4 AS LOC, GO.CURRENCY_CODE AS CURR_CODE,
GO.CURR_AMT AS OPEN_AMT,
GC.CURR_AMT AS CURR_AMT,
I.INV_AMT AS INV_AMT,
GO.CURR_AMT+GC.CURR_AMT+I.INV_AMT AS CLOSING_AMT
FROM
(
SELECT GLO.AOC_NAME, GLO.ACCT_YEAR, GLO.ACCOUNT_ID, GLO.ACCOUNT_NAME, GLO.STATUS, GLO.SEGMENT4, GLO.SEGMENT5, GLO.CURRENCY_CODE,
COUNT(GLO.JOURNAL_NAME) AS J_COUNT,
SUM(GLO.CURR_AMT) AS CURR_AMT,
SUM(GLO.ACCT_AMT) AS ACCT_AMT
FROM GLO GLO
GROUP BY GLO.AOC_NAME, GLO.ACCT_YEAR, GLO.ACCOUNT_ID, GLO.ACCOUNT_NAME, GLO.STATUS, GLO.SEGMENT4, GLO.SEGMENT5, GLO.CURRENCY_CODE
)GO
LEFT JOIN
(
SELECT GLC.AOC_NAME, GLC.ACCT_YEAR,  GLC.ACCOUNT_ID, GLC.ACCOUNT_NAME, GLC.STATUS, GLC.SEGMENT4, GLC.SEGMENT5, GLC.CURRENCY_CODE,
COUNT(GLC.JOURNAL_NAME) AS J_COUNT,
SUM(GLC.CURR_AMT) AS CURR_AMT,
SUM(GLC.ACCT_AMT) AS ACCT_AMT
FROM GLC GLC
GROUP BY GLC.AOC_NAME, GLC.ACCT_YEAR, GLC.ACCOUNT_ID, GLC.ACCOUNT_NAME, GLC.STATUS, GLC.SEGMENT4, GLC.SEGMENT5, GLC.CURRENCY_CODE
)GC
ON GO.AOC_NAME=GC.AOC_NAME
AND GO.ACCT_YEAR=GC.ACCT_YEAR
AND GO.SEGMENT5=GC.SEGMENT5
AND GO.SEGMENT4=GC.SEGMENT4
AND GO.CURRENCY_CODE=GC.CURRENCY_CODE
LEFT JOIN
(
SELECT APIL.AOC_NAME1,
APIL.SEGMENT1,APIL.SEGMENT2,APIL.SEGMENT3,APIL.SEGMENT4,APIL.SEGMENT5,APIL.SEGMENT6,APIL.SEGMENT7,APIL.SEGMENT5_DESC, APIL.ACCT_YEAR_AP, APIL.INVOICE_CURRENCY_CODE,
COUNT(APIL.INVOICE_ID) AS INV_COUNT,
SUM(AMOUNT) AS INV_AMT
FROM APIL APIL
GROUP BY APIL.AOC_NAME1, APIL.SEGMENT1,APIL.SEGMENT2,APIL.SEGMENT3,APIL.SEGMENT4,APIL.SEGMENT5,APIL.SEGMENT6,APIL.SEGMENT7,APIL.SEGMENT5_DESC, APIL.ACCT_YEAR_AP, APIL.INVOICE_CURRENCY_CODE
)I
ON GO.AOC_NAME=I.AOC_NAME1
AND GO.ACCT_YEAR=I.ACCT_YEAR_AP
--AND GO.ACCOUNT_ID=I.SEGMENT3
AND GO.SEGMENT5=I.SEGMENT5
AND GO.SEGMENT4=I.SEGMENT4
AND GO.CURRENCY_CODE=I.INVOICE_CURRENCY_CODE

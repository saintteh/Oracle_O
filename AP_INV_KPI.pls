---P-----------
WITH P AS (
SELECT CURR_DATE,
TO_CHAR (ADD_MONTHS (A.CURR_DATE, -0), 'YYYYMM') AS CURR_PERIOD,
TO_CHAR (ADD_MONTHS (A.CURR_DATE, -1), 'YYYYMM') AS PREV_PERIOD
FROM (
SELECT TO_CHAR(:CURRENT_DATE,'YYYY-MM-DD') AS CURR_DATE
FROM DUAL)A
)
---AP1
,AP1 AS (
SELECT AP0.* FROM (
SELECT
AP.SOURCE,
AP.SOURCE_GRP,
AP.INVOICE_NUM,
AP.INVOICE_ID,
AP.REQUESTER_ID,
AP.AOC,
AP.DOC_CATEGORY_CODE AS DOC_CAT,
AP.VENDOR_ID,
AP.VENDOR_NAME,
AP.VEND_TYPE,
AP.DESCRIPTION,
AP.INVOICE_CURRENCY_CODE,
AP.INVOICE_AMOUNT,
AP.CREATION_DATE,
AP.CREATION_DATE_EDIT,
TO_CHAR(AP.CREATION_DATE_EDIT, 'YYYYMM') AS CREATION_PERIOD,
AP.CREATED_BY,
TO_CHAR(AP.INVOICE_DATE,'YYYY-MM-DD') AS INVOICE_DATE,
AP.WFAPPROVAL_STATUS,
AP.APPROVAL_STATUS,
AP.LAST_UPDATE_DATE,
AP.LAST_UPDATED_BY,
AP.STAGE_DATE,
AP.STAGE_STATUS AS STAGE_STATUS_ORIG,
CASE WHEN AP.STAGE_STATUS IS NULL THEN AP.APPROVAL_STATUS ELSE AP.STAGE_STATUS END AS STAGE_STATUS,
AP.INITIATED_DATE,
AP.INITIATED_BY,
AP.ASSIGNED_BY,
AP.ASSIGNED_DATE,
AP.APPROVED_BY,
AP.APPROVED_DATE,
AP.CANCELLED_DATE,
AP.CANCELLED_BY,
--AP.STAFF_NAME,
CASE WHEN TO_CHAR(AP.CREATION_DATE,'YYYY-MM-DD') > '2019-08-02' THEN SUBSTR(AP.DESCRIPTION,6,3) ELSE AP.STAFF_NAME END AS STAFF_NAME,
AP.CREATION_DATE_EDIT AS AGE_START_DATE,
CASE WHEN AP.STAGE_DATE IS NOT NULL THEN AP.STAGE_DATE
WHEN AP.STAGE_DATE IS NULL THEN AP.LAST_UPDATE_DATE END AS AGE_END_DATE
FROM
(SELECT 'APIA' AS T, APIA.*,
--CASE WHEN APIA.SOURCE IN ('AMOS','ISP') THEN 'INITIATE_DATE_GRP' ELSE 'CREATION_DATE_GRP' END AS SOURCE_GRP,
APIA.SOURCE AS SOURCE_GRP,
CASE WHEN APIA.SOURCE IN ('AMOS','ISP') THEN X1.INITIATED_DATE ELSE APIA.CREATION_DATE END AS CREATION_DATE_EDIT,
CASE WHEN APIA.SOURCE IN ('AMOS','ISP') THEN X1.INITIATED_BY ELSE APIA.CREATED_BY END AS STAFF_NAME,
E.LEGAL_ENTITY_IDENTIFIER AS AOC,
PSV.VENDOR_NAME,
PSV.VENDOR_TYPE_LOOKUP_CODE AS VEND_TYPE,
X1.STAGE_STATUS, X1.STAGE_DATE, X1.INITIATED_BY, X1.INITIATED_DATE, X1.ASSIGNED_BY,
X1.ASSIGNED_DATE, X1.APPROVED_BY, X1.APPROVED_DATE
FROM AP_INVOICES_ALL APIA
LEFT JOIN XLE_ENTITY_PROFILES E ON APIA.LEGAL_ENTITY_ID=E.LEGAL_ENTITY_ID
LEFT JOIN POZ_SUPPLIERS_V PSV ON APIA.VENDOR_ID=PSV.VENDOR_ID
LEFT JOIN
----X1
(SELECT 'APIAHA_SUM' AS T, X.INVOICE_ID, SYSDATE AS CURR_DATE,
MAX(DECODE(X.RN, '1', X.RESPONSE))STAGE_STATUS,
MAX(DECODE(X.RN, '1', X.CREATION_DATE))STAGE_DATE,
MAX(DECODE(X.RESPONSE, 'INITIATED', X.APPROVER_ID))INITIATED_BY,
MAX(DECODE(X.RESPONSE, 'INITIATED', X.CREATION_DATE))INITIATED_DATE,
MAX(DECODE(X.RESPONSE, 'ORA_ASSIGNED TO', X.APPROVER_ID))ASSIGNED_BY,
MAX(DECODE(X.RESPONSE, 'ORA_ASSIGNED TO', X.CREATION_DATE))ASSIGNED_DATE,
MAX(DECODE(X.RESPONSE, 'APPROVED', X.APPROVER_ID))APPROVED_BY,
MAX(DECODE(X.RESPONSE, 'APPROVED', X.CREATION_DATE))APPROVED_DATE
FROM (
SELECT 'APIA' AS T,
ROW_NUMBER() OVER (PARTITION BY H.ORG_ID, H.INVOICE_ID ORDER BY H.CREATION_DATE DESC) AS RN,
H.ORG_ID, H.INVOICE_ID, H.RESPONSE, H.APPROVER_ID, H.CREATION_DATE, H.LAST_UPDATE_DATE
FROM AP_INV_APRVL_HIST_ALL H
--WHERE H.INVOICE_ID = :INVOICE_ID
) X
GROUP BY X.INVOICE_ID
)X1
---X1
ON APIA.INVOICE_ID=X1.INVOICE_ID
)AP)AP0
WHERE AP0.AOC IN (:AOC)
AND AP0.CREATION_PERIOD =(SELECT CURR_PERIOD FROM P) --(:CREATION_PERIOD)
AND AP0.APPROVAL_STATUS IN (:APPROVAL_STATUS)
AND AP0.SOURCE NOT IN ('Netting', 'Withholding tax')
--AND (:INVOICE_ID IS NULL OR AP.INVOICE_ID = :INVOICE_ID)
AND (:INVOICE_ID IS NULL OR AP0.INVOICE_NUM = :INVOICE_ID)
)
---AP2
, AP2 AS (
SELECT AP1.*,
(TO_DATE(CAST(AP1.AGE_END_DATE AS DATE), 'YYYY-MM-DD hh24:mi') - TO_DATE(CAST(AP1.AGE_START_DATE AS DATE), 'YYYY-MM-DD hh24:mi')) DAY_DIFF,
TO_CHAR(AP1.CREATION_DATE_EDIT, 'DY') AS C_DAY,
'W'||TO_CHAR(AP1.CREATION_DATE_EDIT, 'W') AS C_WK,
'W'||TO_CHAR(AP1.CREATION_DATE_EDIT, 'W')||'D'||TO_CHAR(AP1.CREATION_DATE_EDIT, 'DY') AS C_WK2,
TO_CHAR(AP1.CREATION_DATE_EDIT, 'MON-DD') AS CD
FROM AP1 AP1
)
---AP3
, AP3 AS (
SELECT AP2.*, CASE
WHEN AP2.DAY_DIFF BETWEEN 0 AND 3 THEN '00-03'
WHEN AP2.DAY_DIFF BETWEEN 4 AND 5 THEN '04-05'
WHEN AP2.DAY_DIFF BETWEEN 6 AND 10 THEN '06-10'
WHEN AP2.DAY_DIFF BETWEEN 11 AND 20 THEN '11-20'
WHEN AP2.DAY_DIFF BETWEEN 21 AND 30 THEN '21-30'
WHEN AP2.DAY_DIFF >30 THEN '>30'
END AS AGING
FROM AP2 AP2
)


--SELECT 'AP1' AS T, AP1.* FROM AP1 AP1
--SELECT 'AP2' AS T, AP2.* FROM AP2 AP2
SELECT AP3.* FROM AP3 AP3
